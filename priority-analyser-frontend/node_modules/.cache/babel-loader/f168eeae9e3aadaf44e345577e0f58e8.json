{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\project\\\\backend_admission\\\\priority-analyser-frontend\\\\src\\\\Location\\\\District.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport districtMapData from \"./metadata/districtMapData\";\nimport red from \"@material-ui/core/colors/red\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultColor = \"green\";\nconst pathColor = \"#f0ece1\";\n\nconst getRandomColor = () => {\n  return \"#f0ece1\";\n};\n\nconst useStyles = makeStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: \"inherit\",\n    borderRadius: \"5px\"\n  }\n}));\nexport default function DistrictMap(_ref) {\n  _s();\n\n  let {\n    onMapClick,\n    sectorClassName,\n    containerClassName,\n    stroke,\n    strokeWidth,\n    districtData,\n    maxValue\n  } = _ref;\n\n  const handleMapClick = item => {\n    if (onMapClick) {\n      onMapClick({\n        name: item.name,\n        zip: item.zip,\n        province: item.province,\n        area: item.area\n      });\n    }\n  };\n\n  function camelize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const classes = useStyles(); // console.log(districtData)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"100%\"\n    },\n    className: containerClassName || \"\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 1026.077 519.136\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(-52.379 -15.971)\",\n        children: districtMapData.map((item, index) => {\n          // red[districtData[item.name.toLowerCase()] * 1000 / maxValue]\n          // console.log(`rgba(${districtData[item.name.toLowerCase()]/maxValue * 255}, ${255}, ${255}, 1)`)\n          // console.log(districtData[item.name.toLowerCase()]/maxValue)\n          // console.log(districtData)\n          const numberOfStudents = districtData.hasOwnProperty(item.name.toLowerCase()) ? districtData[item.name.toLowerCase()] : 0;\n          const normalized = numberOfStudents / maxValue * 80;\n          const color = `hsl(200, 100%, ${100 - normalized}%)`;\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            classes: {\n              tooltip: classes.tooltip\n            },\n            title: camelize(item.name) + \" \" + numberOfStudents,\n            placement: \"top\",\n            arrow: true,\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              className: sectorClassName || \"\",\n              style: {\n                cursor: \"pointer\",\n                fill: color\n              },\n              stroke: stroke || \"#000\",\n              strokeWidth: strokeWidth || \"1px\",\n              d: item.shape,\n              onClick: () => handleMapClick(item),\n              onMouseOver: event => {// event.target.style.fill = hoverColor || defaultColor\n              },\n              onMouseOut: event => {// event.target.style.fill = pathColor\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, item.zip, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DistrictMap, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DistrictMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistrictMap\");","map":{"version":3,"names":["React","districtMapData","red","Tooltip","makeStyles","defaultColor","pathColor","getRandomColor","useStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","borderRadius","DistrictMap","onMapClick","sectorClassName","containerClassName","stroke","strokeWidth","districtData","maxValue","handleMapClick","item","name","zip","province","area","camelize","string","charAt","toUpperCase","slice","classes","maxWidth","map","index","numberOfStudents","hasOwnProperty","toLowerCase","normalized","cursor","fill","shape","event"],"sources":["C:/Users/Dell/Desktop/project/backend_admission/priority-analyser-frontend/src/Location/District.js"],"sourcesContent":["import React from \"react\";\r\nimport districtMapData from \"./metadata/districtMapData\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst defaultColor = \"green\";\r\nconst pathColor = \"#f0ece1\";\r\nconst getRandomColor = () => {\r\n  return \"#f0ece1\";\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"inherit\",\r\n    borderRadius: \"5px\",\r\n  },\r\n}));\r\n\r\nexport default function DistrictMap({\r\n  onMapClick,\r\n  sectorClassName,\r\n  containerClassName,\r\n\r\n  stroke,\r\n  strokeWidth,\r\n  districtData,\r\n  maxValue,\r\n}) {\r\n  const handleMapClick = (item) => {\r\n    if (onMapClick) {\r\n      onMapClick({\r\n        name: item.name,\r\n        zip: item.zip,\r\n        province: item.province,\r\n        area: item.area,\r\n      });\r\n    }\r\n  };\r\n\r\n  function camelize(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  // console.log(districtData)\r\n  return (\r\n    <div style={{ maxWidth: \"100%\" }} className={containerClassName || \"\"}>\r\n      <svg viewBox=\"0 0 1026.077 519.136\">\r\n        <g transform=\"translate(-52.379 -15.971)\">\r\n          {districtMapData.map((item, index) => {\r\n            // red[districtData[item.name.toLowerCase()] * 1000 / maxValue]\r\n            // console.log(`rgba(${districtData[item.name.toLowerCase()]/maxValue * 255}, ${255}, ${255}, 1)`)\r\n            // console.log(districtData[item.name.toLowerCase()]/maxValue)\r\n            // console.log(districtData)\r\n\r\n            const numberOfStudents = districtData.hasOwnProperty(\r\n              item.name.toLowerCase()\r\n            )\r\n              ? districtData[item.name.toLowerCase()]\r\n              : 0;\r\n\r\n            const normalized = (numberOfStudents / maxValue) * 80;\r\n\r\n            const color = `hsl(200, 100%, ${100 - normalized}%)`;\r\n\r\n            return (\r\n              <Tooltip\r\n                key={item.zip}\r\n                classes={{ tooltip: classes.tooltip }}\r\n                title={camelize(item.name) + \" \" + numberOfStudents}\r\n                placement=\"top\"\r\n                arrow\r\n              >\r\n                <path\r\n                  className={sectorClassName || \"\"}\r\n                  style={{ cursor: \"pointer\", fill: color }}\r\n                  key={index}\r\n                  stroke={stroke || \"#000\"}\r\n                  strokeWidth={strokeWidth || \"1px\"}\r\n                  d={item.shape}\r\n                  onClick={() => handleMapClick(item)}\r\n                  onMouseOver={(event) => {\r\n                    // event.target.style.fill = hoverColor || defaultColor\r\n                  }}\r\n                  onMouseOut={(event) => {\r\n                    // event.target.style.fill = pathColor\r\n                  }}\r\n                ></path>\r\n              </Tooltip>\r\n            );\r\n          })}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}